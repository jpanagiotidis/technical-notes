## Global templates
	1) create a templates folder at myproject/myproject/templates
	2) open myproject/myproject/settings.py
	3) on TEMPLATES if 'DIR' doesnt exists add it and then add the templates dir path into DIR list
		for example:
			TEMPLATES = [
				{
					'BACKEND': 'django.template.backends.django.DjangoTemplates',
					'DIRS': [os.path.join(BASE_DIR, 'templates')],
					'APP_DIRS': True,
					'OPTIONS': {
						'context_processors': [
							'django.template.context_processors.debug',
							'django.template.context_processors.request',
							'django.contrib.auth.context_processors.auth',
							'django.contrib.messages.context_processors.messages',
						],
					},
				},
			]

## App templates
	1) create a templates folder at myproject/myapp/templates
	2) at myproject/myproject/settings.py at TEMPLATES 'APP_DIRS' must be true 
		(this means 'check each app folder for a folder called templates and use the templates')
	3) create the myapp folder at myproject/myapp/templates/myapp 
		(this step is perfomed for namespacing reasons)
	4) create the index.html  at myproject/myapp/templates/myapp/index.html
	5) this template can be referenced know as myapp/index.html

## Override templates 
	## admin page title
		1) create an admin folder inside templates folder
			for example:
				myproject/myproject/templates/admin
		2) from django source code copy the django/contrib/admin/templates/admin/base_site.html
		3) edit the copied template

## Template example
	<h1>{{ question.question_text }}</h1>
	<ul>
	{% for choice in question.choice_set.all %}
	    <li>{{ choice.choice_text }}</li>
	{% endfor %}
	</ul>

## Remove hardcoded urls
	on myapp/templates/myapp/index.html:
	instead of:
		<li><a href="/myapp/movie/{{ m.id }}/">{{ m.name }}</a></li>
	use:
		<li><a href="{% url 'movie' m.id %}">{{ m.name }}</a></li>
			the movie name is defined into myapp/urls.py
				url(r'^movie/(?P<movie_id>[0-9]+)/$', views.movie, name='movie'),

## Add namespace
	1) on myproject/urls.py
		change:
			url(r'^myapp/', include('myapp.urls')),
		into:
			url(r'^myapp/', include('myapp.urls', namespace='moviesapp')),
	2) anytime you reference this url by name use:
		moviesapp:<view_name>
		for example:
			on myapp/templates/myapp/index.html:
				<li><a href="{% url 'moviesapp:movie' m.id %}">{{ m.name }}</a></li>